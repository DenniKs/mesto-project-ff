{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/components/index.js","webpack://mesto-project-ff/./src/components/cards.js"],"sourcesContent":["// Функция для создания новой карточки на основе шаблона\r\n// card — объект с данными карточки (name и link)\r\n// deleteCard — обработчик удаления карточки\r\n// addLike — обработчик лайка\r\n// openPopupImage — функция открытия попапа с изображением\r\nexport function createCard(card, deleteCard, addLike, openPopupImage) {\r\n    const template = document.querySelector('#card-template').content;\r\n    const cardElement = template.querySelector('.card').cloneNode(true);\r\n\r\n    const imageElement = cardElement.querySelector('.card__image');\r\n    const titleElement = cardElement.querySelector('.card__title');\r\n    const deleteButton = cardElement.querySelector('.card__delete-button');\r\n    const likeButton = cardElement.querySelector('.card__like-button');\r\n\r\n    titleElement.textContent = card.name;\r\n    imageElement.src = card.link;\r\n    imageElement.alt = card.name;\r\n\r\n    // Назначаем обработчики событий для кнопок и изображения\r\n    deleteButton.addEventListener('click', deleteCard);\r\n    likeButton.addEventListener('click', addLike);\r\n    imageElement.addEventListener('click', () => openPopupImage(card.link, card.name));\r\n\r\n    return cardElement;\r\n}\r\n\r\n// Функция-обработчик удаления карточки из DOM\r\nexport function deleteCard(evt) {\r\n    const cardElement = evt.target.closest('.card');\r\n    cardElement.remove();\r\n}\r\n\r\n// Функция-обработчик постановки и снятия лайка\r\nexport function addLike(evt) {\r\n    const likeButton = evt.target;\r\n    if (likeButton.classList.contains('card__like-button')) {\r\n        likeButton.classList.toggle('card__like-button_is-active');\r\n    }\r\n}\r\n","// Функция открытия модального окна (попапа)\r\n// currentModal — DOM-элемент открываемого попапа\r\nexport function openModal(currentModal) {\r\n    currentModal.classList.add('popup_is-opened');\r\n    document.addEventListener('keydown', closeModalEscape);\r\n};\r\n\r\n// Функция закрытия модального окна (попапа)\r\n// currentModal — DOM-элемент закрываемого попапа\r\nexport function closeModal(currentModal) {\r\n    currentModal.classList.remove('popup_is-opened');\r\n    document.removeEventListener('keydown', closeModalEscape);\r\n};\r\n\r\n// Функция для закрытия попапа при клике по оверлею (фону вокруг содержимого)\r\nexport function closeModalOverlay(evt) {\r\n    if (evt.target === evt.currentTarget) {\r\n        closeModal(evt.currentTarget);\r\n    }\r\n}\r\n\r\n// Функция закрытия попапа при нажатии клавиши Escape\r\nexport function closeModalEscape(evt) {\r\n    if (evt.key === 'Escape') {\r\n        const currentModal = document.querySelector('.popup_is-opened');\r\n        if (currentModal) {\r\n            closeModal(currentModal);\r\n        }\r\n    }\r\n};\r\n","import '../pages/index.css';\nimport { initialCards } from './cards.js';\nimport { createCard, deleteCard, addLike } from './card.js';\nimport { openModal, closeModal, closeModalOverlay } from './modal.js';\n\nconst buttonEditProfile = document.querySelector('.profile__edit-button');\nconst popupEditProfile = document.querySelector('.popup_type_edit');\nconst buttonAddCard = document.querySelector('.profile__add-button');\nconst popupAddCard = document.querySelector('.popup_type_new-card');\nconst nameInput = document.querySelector('.popup__input_type_name');\nconst jobInput = document.querySelector('.popup__input_type_description');\nconst nameTitle = document.querySelector('.profile__title');\nconst jobTitle = document.querySelector('.profile__description');\nconst formEditProfile = document.querySelector('.popup__form[name=\"edit-profile\"]');\nconst formAddCard = document.querySelector('.popup__form[name=\"new-place\"]');\nconst popupImage = document.querySelector('.popup__image');\nconst popupImageOpen = document.querySelector('.popup_type_image');\nconst popupImageDescription = document.querySelector('.popup__caption');\nconst cardContainer = document.querySelector('.places__list');\nconst popups = document.querySelectorAll('.popup');\n\n// Добавление карточек\ninitialCards.forEach(function (item) {\n    const newCard = createCard(item, deleteCard, addLike, openPopupImage);\n    cardContainer.append(newCard);\n});\n\n// Обработчик открытия попапа добавления карточки\nbuttonAddCard.addEventListener('click', () => openModal(popupAddCard));\n\n// Обработчик открытия попапа редактирования профиля\nbuttonEditProfile.addEventListener('click', function () {\n    nameInput.value = nameTitle.textContent;\n    jobInput.value = jobTitle.textContent;\n    openModal(popupEditProfile);\n});\n\n// Обработчик отправки формы редактирования профиля\nformEditProfile.addEventListener('submit', function (evt) {\n    evt.preventDefault();\n    nameTitle.textContent = nameInput.value;\n    jobTitle.textContent = jobInput.value;\n    closeModal(popupEditProfile);\n});\n\n// Обработчик отправки формы добавления новой карточки\nformAddCard.addEventListener('submit', function (evt) {\n    evt.preventDefault();\n    const item = {\n        link: document.querySelector('.popup__input_type_url').value,\n        name: document.querySelector('.popup__input_type_card-name').value\n    };\n    const newCard = createCard(item, deleteCard, addLike, openPopupImage);\n    cardContainer.prepend(newCard);\n    formAddCard.reset();\n    closeModal(popupAddCard);\n});\n\n// Функция открытия попапа с изображением\nfunction openPopupImage(imageSrc, imageAlt) {\n    popupImage.src = imageSrc;\n    popupImage.alt = imageAlt;\n    popupImageDescription.textContent = imageAlt;\n    openModal(popupImageOpen);\n}\n\n// Добавление обработчиков закрытия попапов по крестику и оверлею\npopups.forEach(popup => {\n    const closeButton = popup.querySelector('.popup__close');\n    closeButton.addEventListener('click', () => closeModal(popup));\n    popup.addEventListener('click', closeModalOverlay);\n});\n","export const initialCards = [\n  {\n    name: \"Архыз\",\n    link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/arkhyz.jpg\",\n  },\n  {\n    name: \"Челябинская область\",\n    link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/chelyabinsk-oblast.jpg\",\n  },\n  {\n    name: \"Иваново\",\n    link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/ivanovo.jpg\",\n  },\n  {\n    name: \"Камчатка\",\n    link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kamchatka.jpg\",\n  },\n  {\n    name: \"Холмогорский район\",\n    link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kholmogorsky-rayon.jpg\",\n  },\n  {\n    name: \"Байкал\",\n    link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/baikal.jpg\",\n  },\n];\n"],"names":["createCard","card","deleteCard","addLike","openPopupImage","cardElement","document","querySelector","content","cloneNode","imageElement","titleElement","deleteButton","likeButton","textContent","name","src","link","alt","addEventListener","evt","target","closest","remove","classList","contains","toggle","openModal","currentModal","add","closeModalEscape","closeModal","removeEventListener","closeModalOverlay","currentTarget","key","buttonEditProfile","popupEditProfile","buttonAddCard","popupAddCard","nameInput","jobInput","nameTitle","jobTitle","formEditProfile","formAddCard","popupImage","popupImageOpen","popupImageDescription","cardContainer","popups","querySelectorAll","imageSrc","imageAlt","forEach","item","newCard","append","value","preventDefault","prepend","reset","popup"],"sourceRoot":""}